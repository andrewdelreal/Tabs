Window Class
	- Main Window (Default window of application)
		-min max and close button
	-WindowState
		- controls initial window state
	-WindowStartupLocation
		- Control Location (Top, Left properties etc)
	-Topmost
	-SizeToContents
		- Manual by default
	-ShowInTaskbar
	-Icon

MSDN Pages

XAML
	- Extention of XML namespace
	- XML Syntax

XMLNS
	- Defines Namespace to resolve elements

	ex. 
	<Label x:Name=
	x:Name is XAML namespace
	Label is just default XML namespace


d:
	design State
		d:DesignHeight
		d:DesignWidth

		These are only for the designers

mc:
	Markup Compatability
	Ignorable=
	

local:
	<local:MyFolder/>
	- where to find This folder within local project folder

WPF Boilerplate Code
	App.config
	- startup, version, encoding config
	- where the .NET runtimes are defined

	- containt variable configurations
	- Connection strings to databases
		- may be useful later
	- Connection details to external services
	

	APP.xaml
	- Defines global resources

<TextBlock>
	- <Bold>
	- <Italic>
	- <LineBreak>
	- <Hyperlink>
	- TextTrimming="None", 
	-TextWrapping="Wrap", "WrapWithOverflow"
	- Foreground=""
	- <Span Foreground="Black" > Black Text</Span>

<StackPanel>
        <Label
            Margin="10"
            BorderThickness="1"
            BorderBrush="Black"
            >
            <StackPanel>
                <Image Width="60" Source="https:://one.png"></Image>
                <AccessText FontSize="20" Text="Message"></AccessText>
            </StackPanel>
        </Label>
        <TextBox
            FontSize="30"
            Margin="10"
            >
            Hello
        </TextBox>
    </StackPanel>

<TextBox 
            FontSize="20" 
            Margin="15"
            AcceptsReturn="True"
            TextWrapping="Wrap"
            SpellCheck.IsEnabled="True"
            Language="en-US"
            IsReadOnly="False"
            >
            
        </TextBox>


<Button x:Name="myButton" 
                Width="50" 
                Content="Click" 
                Click="Button_Click" 
                MouseDoubleClick="myButton_MouseDoubleClick">
            
</Button>
<Label FontSize ="16" Name="myLabel">Test</Label>

<StackPanel>
        <Label FontSize="16" Name="myLabel">Test</Label>
        <RadioButton x:Name="red_button" GroupName="Colors" Checked="red_Checked" Unchecked="red_button_Unchecked">Red</RadioButton>
        <RadioButton GroupName="Colors">Green</RadioButton>
        <RadioButton GroupName="Colors">Blue</RadioButton>

        <Label FontSize="16">Test</Label>
        <RadioButton GroupName="Colors1">Red</RadioButton>
        <RadioButton GroupName="Colors1">Green</RadioButton>
        <RadioButton GroupName="Colors1">Blue</RadioButton>
</StackPanel>

<StackPanel>
    <Label FontSize="16" Name="myLabel">Test</Label>
    <CheckBox>Red</CheckBox>
    <CheckBox>Green</CheckBox>
    <CheckBox>Blue</CheckBox>
</StackPanel>


Overall Designs
	- Random Tabs
	- Range of notes
	- Variance between notes
	- Stay in natural key for now
	- Use a dictionary of tabs? 
		- If the tab is Sharp, Add one, Flat, minus one
		- Maybe a dictionary of increments in the natural key, that is altered depending on the tab

First
	- Random Notes


Later Implementations
	- Time Signiatures
	- Keys

Left Grid
	- 


Things to do.

	- Add for more lines. Done
		- I can either make each bar generation randomized
		- Or make it all in one string
	- Add UI elements to get the things like lowest and highest fret, measures, and num of notes -- Mostly done with UI protection
	- will need to change the printing if the character of fret is longer than one -- Done

	- Chords
		- Made all the chords I know
		- Works by itself

	- Change which strings to use -- Done
		


	- Keys

	- Double Stops


	- Fill in chord dictionary -- Done
	- Make notespacing larger for chord/ make placement of next chord at least two spaces away -- Adjustable


	- make the random notes and chords return the retstring, The measure handling will all be in the random methods -- Done
	- Will need to add generating both notes and chords.

	- Cleanup variable names
	- how to do Chord and Note Generation.
	- I need to make a ratio of notes to chords based on the sent in information
	- I need to make the spacing dynamic to each side of the UI.
	- Each line needs to have the ratio of strings to chords. Then generate the order of notes and strings. Maybe make this a list
		of function calls. TO just call each insert?

		- will need to work on making all the measures per line and update the 
		remaining measures with the correct amount of measures based on the spacing of the
		notes and chords
		- Will need to add the notes and chords based on the strings


Manual Tabs
- Set up reading a file - Done
- Set up Editing a file - Need to make mouse cursor only
- Set up saving a file	- Need to be able to choose name and path

- I have set up a file opening a file to get a path
	- need to get a file to open and read it.

Need to then save the file, which should be easier than reading it and printing it.

- Choose where to save. 
- Load a file should be easy. Should be able to just read a text file using a System IO method or -- done

- update text box to insert only instead of deleting


